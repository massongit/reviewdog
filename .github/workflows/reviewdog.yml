name: reviewdog
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  reviewdog-github-check:
    permissions:
      checks: write
      contents: read
      pull-requests: write
    name: reviewdog (github-check)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Install linters
        run: go install golang.org/x/lint/golint@latest

      - name: Setup reviewdog
        # uses: reviewdog/action-setup@v1
        run: |
          go install ./cmd/reviewdog

      - name: Run reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          golint ./... | reviewdog -f=golint -name=golint-github-check -reporter=github-check -level=warning

      - name: Run reviewdog with sub-dir (github-check)
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd ./_testdata/ && golint ./... | reviewdog -f=golint -name=golint-check-subdir -reporter=github-check -level=info -filter-mode=nofilter

      - name: Custom rdjson test (github-check)
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat ./_testdata/custom_rdjson.json | \
            reviewdog -name="custom-rdjson" -f=rdjson -reporter=github-check -level=info

  reviewdog-pr:
    permissions:
      checks: write
      contents: read
      pull-requests: write
    if: github.event_name == 'pull_request'
    name: reviewdog on Pull Request
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Install linters
        run: go install golang.org/x/lint/golint@latest

      - name: Setup reviewdog
        # uses: reviewdog/action-setup@v1
        run: |
          go install ./cmd/reviewdog

      - name: Run reviewdog (github-pr-check)
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          reviewdog \
            -name="mdn-linter" \
            -f=diff \
            -f.diff.strip=1 \
            -reporter=github-pr-review < patch.patch

  golangci-lint:
    permissions:
      checks: write
      contents: read
      pull-requests: write
    if: github.event_name == 'pull_request'
    name: runner / golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.github_token }}
          golangci_lint_flags: "--timeout 2m"
          level: "warning"
          reporter: github-pr-check

  staticcheck:
    permissions:
      checks: write
      contents: read
      pull-requests: write
    if: github.event_name == 'pull_request'
    name: runner / staticcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - uses: reviewdog/action-staticcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          filter_mode: nofilter
          fail_on_error: true
          # workdir: ./_testdata/

  misspell:
    name: runner / misspell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ secrets.github_token }}
          locale: "US"
          reporter: github-check

  reviewdog-github-annotations:
    permissions:
      contents: read
    name: reviewdog (github-pr-annotations)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Setup reviewdog
        # uses: reviewdog/action-setup@v1
        run: |
          go install ./cmd/reviewdog

      - name: Custom rdjson test
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat ./_testdata/custom_rdjson.json | \
            reviewdog -name="custom-rdjson" -f=rdjson -reporter=github-pr-annotations

  reviewdog-sarif:
    permissions:
      contents: read
      actions: read
      security-events: write
    name: reviewdog (sarif)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Setup reviewdog
        # uses: reviewdog/action-setup@v1
        run: |
          go install ./cmd/reviewdog
      - name: Custom rdjson test
        run: |
          mkdir ../results
          cat ./_testdata/custom_rdjson.json |
            reviewdog -name="custom-rdjson" -f=rdjson -reporter=sarif |
            tee ../results/custom-rdjson.sarif
      - name: Install linters
        run: go install golang.org/x/lint/golint@latest
      - name: Run golint
        run: |
          golint ./... | reviewdog -f=golint -reporter=sarif |
            tee ../results/golint.sarif
      - uses: github/codeql-action/upload-sarif@v3

  typos:
    name: runner / typos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-typos@v1

  languagetool:
    name: runner / languagetool
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-languagetool@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-check
          level: info
          patterns: |
            **/*.md
            !**/testdata/**

  shellcheck:
    if: github.event_name == 'pull_request'
    name: runner / shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review

  alex:
    name: runner / alex
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-alex@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-check
          level: info

  textlint:
    name: runner / textlint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-setup@v1
      - run: npm install
      - name: textlint
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx textlint -f checkstyle README.md | \
            reviewdog -f=checkstyle -name="textlint" -reporter=github-check -level=info

  sarif:
    name: runner / textlint sarif
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-setup@v1
      - run: npm install
      - name: textlint sarif
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx textlint -f @microsoft/eslint-formatter-sarif README.md | \
            reviewdog -f=sarif -name="textlint" -reporter=github-check -level=info
